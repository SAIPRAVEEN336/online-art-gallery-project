import React, { useEffect, useState } from "react";
import "./Dashboard.css";

const Dashboard = () => {
  const [cartItems, setCartItems] = useState([]);

  useEffect(() => {
    const storedCart = JSON.parse(localStorage.getItem("cart")) || [];
    setCartItems(storedCart);
  }, []);

  const handleRemove = (id) => {
    const updatedCart = cartItems.filter((item) => item.id !== id);
    setCartItems(updatedCart);
    localStorage.setItem("cart", JSON.stringify(updatedCart));
  };

  return (
    <div className="dashboard-container">
      {/* Header Section */}
      <header className="dashboard-header">
        <h1>Dashboard</h1>
        <p>Welcome to your personalized art collection!</p>
      </header>

      {/* Main Cart Section */}
      <div className="cart-section">
        <h2>Your Cart</h2>
        {cartItems.length === 0 ? (
          <div className="empty-cart-message">
            <p>Your cart is empty.</p>
          </div>
        ) : (
          <div className="cart-wrapper">
            <div className="cart-grid">
              {cartItems.map((item) => (
                <div key={item.id} className="cart-item">
                  <img src={item.image} alt={item.title} className="cart-image" />
                  <h3>{item.title}</h3>
                  <p>Artist: {item.artist}</p>
                  <p>Price: ${item.price.toLocaleString()}</p>
                  <button onClick={() => handleRemove(item.id)}>
                    Remove from Cart
                  </button>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default Dashboard;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
(CSS)

/* Dashboard Container */
.dashboard-container {
  width: 100%;
  height: 100vh; /* Full height of the viewport */
  margin: 0;
  padding: 20px;
  background-color: #202020;
  color: white;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/* Header Section */
.dashboard-header {
  text-align: center;
  margin-bottom: 30px;
}

.dashboard-header h1 {
  font-size: 36px;
  margin-bottom: 10px;
}

.dashboard-header p {
  font-size: 18px;
  color: #ccc;
}

/* Cart Section */
.cart-section {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}

/* Cart Grid */
.cart-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); /* Responsive layout */
  gap: 20px;
  width: 100%; /* Full width */
  max-width: 1500px; /* Optional: Adjust based on your design */
  margin: 0 auto;
}

/* Cart Item */
.cart-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  border: 1px solid #ccc;
  border-radius: 10px;
  padding: 20px;
  background-color: #333;
  text-align: center;
}

.cart-image {
  width: 100%;
  height: 200px;
  object-fit: cover;
  border-radius: 8px;
  margin-bottom: 15px;
}

button {
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  padding: 10px 15px;
  cursor: pointer;
  transition: background-color 0.3s;
}

button:hover {
  background-color: #0056b3;
}
